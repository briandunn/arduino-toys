import '../rakelib/gtest.rake'
import '../rakelib/arduino.rake'
dot_o = ->(file) {"#{file.to_s.gsub /\.[^\.]+$/, '' }.o"}

sources = %w[sequence.cpp ../libraries/interrupt_button.cpp ../libraries/pin.cpp]
for source in sources
  file dot_o[source] => source do |t|
    sh "avr-gcc #{CXX_FLAGS} -I../libraries -c #{t.prerequisites.first} -o #{t.name}"
  end
end

task :clean do
  sh "rm *.o *.d *.hex *.elf"
end

task test: :gtest do
  puts $gtest_lib
end

file 'sequence.elf' => sources.map(&dot_o) + %w[arduino] do |t|
  sh "avr-gcc -Os -Wl,--gc-sections -L. -lm -mmcu=atmega328p -o #{t.name} #{sources.map(&dot_o).join ' '} #$arduino_lib"
end

file 'sequence.hex' => 'sequence.elf' do |t|
  sh "avr-objcopy -O ihex -R .eeprom #{t.prerequisites.first} #{t.name}"
end

task build: 'sequence.hex'
task default: :build

task upload: :build do |t|
  port = Dir['/dev/tty.usbmodem*'].first or raise "plug the arduino in!"
  sh "avrdude -v -v -pm328p -carduino -P #{port} -U flash:w:sequence.hex:i"
end

